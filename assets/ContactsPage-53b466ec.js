import{N as f,u as S,a as v,r as d,j as t,B as g,b as w,s as j}from"./index-88d798f5.js";import{n as b,F as A,W as I,M as k,T as B}from"./commom.styled-513af2f5.js";const D=e=>e.contacts.items;f.Notify.init({position:"center-top"});const z=()=>{const e=S(D),s=v(),[a,o]=d.useState(""),[c,m]=d.useState(""),u=b(),p=b(),n=r=>{const{value:h,name:x}=r.currentTarget;switch(x){case"name":o(h);break;case"number":m(h);break;default:return}},i=()=>{o(""),m("")},l=r=>{r.preventDefault();const h=r.target,{name:x,number:y}=h.elements,C=x.value,N=y.value;if(e.find(F=>F.name===C)){f.Notify.info(`${x.value} is already in contacts`),o("");return}else i(),s(w({name:C,number:N}))};return t.jsxs(A,{onSubmit:l,children:[t.jsx("label",{htmlFor:u,children:"Name:"}),t.jsx("input",{id:u,type:"text",name:"name",pattern:"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0,value:a,onChange:n}),t.jsx("label",{htmlFor:p,children:"Number:"}),t.jsx("input",{id:p,type:"tel",name:"number",pattern:"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}",title:"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +",required:!0,value:c,onChange:n}),t.jsx(g,{type:"submit",variant:"addBtn",children:"Add contact"})]})},L=j.li`
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 4px 16px;
`,P=({contact:e,onClickDelete:s})=>{const{id:a,name:o,number:c}=e;return t.jsxs(L,{children:[o," : ",c,t.jsx(g,{variant:"delBtn",type:"button",onClick:()=>s(a),children:"Delete"})]})},T=({contacts:e,onClickDelete:s})=>t.jsx("ul",{children:e.map(a=>t.jsx(P,{contact:a,onClickDelete:s},a.id))}),E=j.div`
  display: flex;
  flex-direction: column;
  gap: 16px;
  margin-bottom: 16px;
  padding: 16px;
  border: 2px solid black;
  border-radius: 4px;
`,J=({onChangeFilter:e,value:s})=>{const a=b();return t.jsxs(E,{children:[t.jsx("label",{htmlFor:a,children:"Find contacts by name:"}),t.jsx("input",{type:"text",name:"filter",value:s,onChange:e,id:a})]})},Z=()=>{const[e,s]=d.useState(()=>{const n=window.localStorage.getItem("contacts");return n?JSON.parse(n):[]}),[a,o]=d.useState("");d.useEffect(()=>{window.localStorage.setItem("contacts",JSON.stringify(e))},[e]);const c=({name:n,number:i})=>{const l={id:b(),name:n.trim(),number:i};s(r=>[l,...r])},m=n=>{s(i=>i.filter(l=>l.id!==n))},u=n=>{o(n.target.value.trim().toLowerCase())},p=e.filter(n=>n.name.toLowerCase().includes(a));return t.jsxs(I,{children:[t.jsx(k,{className:"title",children:"Phonebook"}),t.jsx(z,{onAddContact:c,contacts:e}),t.jsx(B,{className:"title",children:"Contacts"}),t.jsx(J,{value:a,onChangeFilter:u}),t.jsx(T,{contacts:p,onClickDelete:m})]})};export{Z as default};
